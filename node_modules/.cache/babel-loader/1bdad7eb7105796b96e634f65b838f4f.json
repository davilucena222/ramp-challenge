{"ast":null,"code":"var _jsxFileName = \"/project/home/davilucena222/workspace/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n  const transactions = useMemo(() => {\n    var _ref, _paginatedTransaction;\n\n    return (_ref = (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : transactionsByEmployee) !== null && _ref !== void 0 ? _ref : null;\n  }, [paginatedTransactions, transactionsByEmployee]);\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    transactionsByEmployeeUtils.invalidateData();\n    await employeeUtils.fetchAll();\n    await paginatedTransactionsUtils.fetchAll();\n    setIsLoading(false);\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    paginatedTransactionsUtils.invalidateData();\n    setIsLoading(true);\n    await transactionsByEmployeeUtils.fetchById(employeeId);\n    setIsLoading(false);\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      setIsLoading(true);\n      employeeUtils.fetchAll().then(() => setIsLoading(false));\n    }\n  }, [employeeUtils.loading, employees]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: employeeUtils.loading || isLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          if (newValue === null) {\n            return;\n          }\n\n          if (newValue.id) {\n            await loadTransactionsByEmployee(newValue.id);\n          } else {\n            loadAllTransactions();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), transactions !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: paginatedTransactionsUtils.loading,\n          onClick: async () => {\n            setIsLoading(true);\n            await loadAllTransactions();\n            setIsLoading(false);\n          },\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yXHk/2qvl++XLkP2SZkJsf+Vph0=\", true);\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","data","employees","employeeUtils","useEmployees","paginatedTransactions","paginatedTransactionsUtils","usePaginatedTransactions","transactionsByEmployee","transactionsByEmployeeUtils","useTransactionsByEmployee","isLoading","setIsLoading","useState","transactions","useMemo","loadAllTransactions","useCallback","invalidateData","fetchAll","loadTransactionsByEmployee","employeeId","fetchById","useEffect","loading","then","EMPTY_EMPLOYEE","item","value","id","label","firstName","lastName","newValue"],"sources":["/project/home/davilucena222/workspace/src/App.tsx"],"sourcesContent":["export function App() {\n  const { data: employees, ...employeeUtils } = useEmployees();\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } =\n    usePaginatedTransactions();\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } =\n    useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? null,\n    [paginatedTransactions, transactionsByEmployee]\n  );\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    transactionsByEmployeeUtils.invalidateData();\n\n    await employeeUtils.fetchAll();\n    await paginatedTransactionsUtils.fetchAll();\n\n    setIsLoading(false);\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData();\n      setIsLoading(true);\n      await transactionsByEmployeeUtils.fetchById(employeeId);\n      setIsLoading(false);\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  );\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      setIsLoading(true);\n      employeeUtils.fetchAll().then(() => setIsLoading(false));\n    }\n  }, [employeeUtils.loading, employees]);\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={employeeUtils.loading || isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return;\n            }\n\n            if (newValue.id) {\n              await loadTransactionsByEmployee(newValue.id);\n            } else {\n              loadAllTransactions();\n            }\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} />\n\n          {transactions !== null && (\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils.loading}\n              onClick={async () => {\n                setIsLoading(true);\n                await loadAllTransactions();\n                setIsLoading(false);\n              }}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}